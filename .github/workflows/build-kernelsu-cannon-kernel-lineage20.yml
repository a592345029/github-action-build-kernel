name: Build-cannon-Kernelsu-lineage20
on:
  workflow_dispatch:
jobs:
  build:
   
    name: Build cannon_Kernelsu_kernel-${{ matrix.version }}
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
         version: "14.0"
    
    - name: install dependencies
      run: |
         sudo apt install gcc-aarch64-linux-gnu
         sudo apt install gcc-arm-linux-gnueabi
         sudo apt-get update -y 
         sudo apt install binutils make python libssl-dev build-essential bc  bison flex unzip libssl-dev ca-certificates xz-utils mkbootimg cpio device-tree-compiler git

    - name: Download kernel source and kernel su 
      run: |
        sudo -i
        cd $GITHUB_WORKSPACE
        git clone -b lineage-20 https://github.com/xiaomi-mt6853-devs/android_kernel_xiaomi_cannon.git
        cd android_kernel_xiaomi_cannon
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
        echo "CONFIG_KPROBES=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_KPROBE_EVENTS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_HAVE_KPROBES=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_KPROBES_ON_FTRACES=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IPC_NS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_CGROUP_DEVICE=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_BRIDGE_NETFILTER=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_NETFILTER_XT_MATCH_IPVS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_POSIX_MQUEUE=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_USER_NS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_CGROUP_PIDS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_BLK_DEV_THROTTLING=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_CGROUP_PERF=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_CGROUP_HUGETLB=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_NET_CLS_CGROUP=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_CGROUP_NET_PRIO=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_CFS_BANDWIDTH=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_RT_GROUP_SCHED=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IP_VS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IP_VS_NFCT=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IP_VS_PROTO_TCP=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IP_VS_PROTO_UDP=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IP_VS_RR=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_SECURITY_APPARMOR=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_VXLAN=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_BRIDGE_VLAN_FILTERING=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_IPVLAN=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_MACVLAN=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_AUFS_FS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_BTRFS_FS=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_BTRFS_FS_POSIX_ACL=y" >>arch/arm64/configs/cannon_defconfig
        echo "CONFIG_DM_THIN_PROVISIONING=y" >>arch/arm64/configs/cannon_defconfig
    - name: Build Kernel
      working-directory: android_kernel_xiaomi_cannon
      run: |
       sudo -i
       export ARCH=arm64
       export SUBARCH=arm64
       make O=out CC=clang-14 cannon_defconfig ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi-
       make O=out CC=clang-14 -j$(nproc --all) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi-
    - name: check
      run: |
       cd /home/runner/work/github-action-build-kernel/github-action-build-kernel/android_kernel_xiaomi_cannon/out/arch/arm64/boot/
       ls
    - name: pack Image.gz with Anykernel3
      run: |
        cd  $GITHUB_WORKSPACE
        git clone https://github.com/chen2021-web/AnyKernel3_cannon.git
        cd AnyKernel3_cannon
        cp ../android_kernel_xiaomi_cannon/out/arch/arm64/boot/Image.gz ./
    - name: Upload boot directory
      uses: actions/upload-artifact@v3
      with:
        name: boot
        path: /home/runner/work/github-action-build-kernel/github-action-build-kernel/android_kernel_xiaomi_cannon/out/arch/arm64/boot
    - name: Upload Image.gz file
      uses: actions/upload-artifact@v3
      with:
        name: Image.gz
        path: /home/runner/work/github-action-build-kernel/github-action-build-kernel/android_kernel_xiaomi_cannon/out/arch/arm64/boot/Image.gz
    - name: Upload Anykernel3_cannon
      uses: actions/upload-artifact@v3
      with:
        name: Anykernel3_cannon
        path: /home/runner/work/github-action-build-kernel/github-action-build-kernel/AnyKernel3_cannon
